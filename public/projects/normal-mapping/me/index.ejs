<!DOCTYPE HTML>
<html>
<head>
  <title>Me Normal Mapped</title>

  <meta name="description" content="Francois Laberge's demos of Normal Mapped Photos Using Canvas ">
  <meta name="tags" content="Francois Laberge, Me, Self, Demos, Normal Mapping, Photos, 3D lighting, Glow Effect, <canvas>, HTML5">
  
  
  <link rel="shortcut icon" href="/images/lighting.ico" type="image/vnd.microsoft.icon">
  <link rel="icon" href="/images/lighting.ico" type="image/vnd.microsoft.icon">
  <link rel="icon" href="/images/lighting.ico" type="image/x-icon">
  
  <!-- <link rel="stylesheet" type="text/css" href="/styles/nav.css"> -->
  <link rel="stylesheet" type="text/css" href="../styles/nm.css">
  
  <script src="/projects/scripts/jquery-1.4.2.min.js"></script>
  <script type="text/javascript" src="/projects/scripts/canvasApp.js"></script>
  <script type="text/javascript" src="/projects/scripts/normalizer-old.js"></script>
  <script type="text/javascript" src="/projects/scripts/stats.js"></script>
  
  <style>
    .canvas-wrapper {
      width: 622px;
      height: auto;
      max-width: 100%;
      margin: 0px auto;
    }
  </style>

  <script>
  	function doStats(){
	   if(0){
      var stats = new Stats();
      
      // Align top-left
      stats.domElement.style.position = 'absolute';
      stats.domElement.style.left = '0px';
      stats.domElement.style.top = '0px';
      stats.domElement.style.height = '50px';
      
      document.body.appendChild( stats.domElement );
      
      setInterval( function () {
      
          stats.update();
      
      }, 1000 / 120 );
    }
	 }
  $(document).ready(function() {
    doStats();

      
    // Disable Currently selected page
    $(".Selected").click(function(){return false;});
  
    var app = new CanvasApp({
      element:"targetCanvas",
      seed: 1000
    });
    
    var d = normalizer.dotProduct({
      x: 0,
      y: 0,
      z: 1
    },{
      x: 0,
      y: 0,
      z: 0
    });
    
    // Settings
    var width = 256,
      height = 256,
      ctx = null;
      imageNames = [
        "right",
        "front",
        "left",
        "back",
        "top",
        "bottom"
      ],
      curImage = 0,
      sphere = {
        x:0.0,
        y:0.0,
        z:0.0,
        r: 0.5
      },
      ray = {
        start: {
          x:0,
          y:0,
          z:2.0
        },
        dir:{
          x:0,
          y:0,
          z:-1
        }
      },
      canvasScalar = 2.0,
      cvs=$('#targetCanvas').get(0),
      ctx = cvs.getContext('2d'); 
      
    // Set the content area width/height
    var mouse = {
      x:0,
      y:0
    };
    
    function rPosition(elementID, mouseX, mouseY) {
      var offset = $('#'+elementID).offset();
      var x = mouseX - offset.left;
      var y = mouseY - offset.top;

      return {'x': x, 'y': y};
    }
    
    function mouseToLight(){
      var light={};
      
      // Rotate around the y plane (from front to around the back in a full cycle)
      // Based on mouse location
      var ra = (mouse.x*2*360+180)*Math.PI/180
      light.x = Math.sin(ra);
      light.y = 0;
      light.z = Math.cos(ra);
      
      return light;
    
      ray.start.x = mouse.x-0.5;
      ray.start.y = mouse.y-0.5;
      var res = normalizer.sphereIntersect(sphere,ray);
      
      
      if(res.hit==false){
        // If it didn't hit the sphere, just make it a vector that sets everything to black.
        light = {
          x: 0,
          y: 0,
          z: 1
        };
        if(mouseDownRight)
          light.z = -light.z;
      }
      else{
        light = {
          x: -res.x,
          y: -res.y,
          z: -res.z
        }
        light = normalizer.normalize(light);
      }
      return light;
    }
    
    var lastDraw = ((new Date()).getTime()-1000),
      lightAngle=0,
      lightSpeed=100, // Angle change per second
      light={
        x:0,
        y:0,
        z:-1
      };
    function draw(){
      var d = new Date(),
        t = d.getTime(),
        timeDelta=t-lastDraw;
      if((timeDelta)<=(1000/60))
        return;
        
      // Figure out light color
      switch(0){
        case 0:
          lightColors = [255,255,255];  
          break;
        case 1:
          lightColors = [
            floatToColorChannel(light.x),
            floatToColorChannel(light.y),
            floatToColorChannel(light.z)
          ];
          break;
        case 2:
          lightColors = [
            Math.floor(app.randomRange(0,255)),
            Math.floor(app.randomRange(0,255)),
            Math.floor(app.randomRange(0,255))
          ];
          break;
      }
        
      // Update light's angle
      lightAngle+=lightSpeed*timeDelta/1000;
      
      // Create list of lights and then pass it to the renderer
      var options={
        ambient:{r:0,g:0,b:0},
        lights:[
          {
            dir:{
              x:light.x,
              y:light.y,
              z:light.z
            },
            color:{
              r:255,g:255,b:255
            }
          }
          
        ]
      };
      normalizer.light(cvs,options);
      
      // Draw light positions
      for(var l = 0; l<options.lights.length; l++){
        var x=(-options.lights[l].dir.x*cvs.width/2)+cvs.width/2,
          y=(-options.lights[l].dir.y*cvs.height/2)+cvs.height/2;
//        app.circle(Math.floor(x),Math.floor(y),Math.max((5+8)*-options.lights[l].dir.z,0.0),app.rgba(options.lights[l].color.r,options.lights[l].color.g,options.lights[l].color.b,1));
      }

      
      // Calculate last draw after it all in case our frame-rate limiter duration is smaller than our elapsed rendering time.
      lastDraw = d.getTime();
     }
    
    function mouseDown(){
      mouseDownLeft=true;
			return true;
		}
		function mouseUp(){
			mouseDownLeft=false;
			return true;
		}
		
		function mouseMove(id,pageX,pageY){
		  mouse = rPosition(id,pageX,pageY);
      mouse.x /= normalizer.getWidth()*canvasScalar;
      mouse.y /= normalizer.getHeight()*canvasScalar;
      light = mouseToLight();
		}
    
    // Emulate mouse with touch events
    if(document.body.ontouchmove!==undefined){
      document.body.addEventListener('touchmove',function(e){
        mouseMove("targetCanvas",e.changedTouches[0].pageX,e.changedTouches[0].pageY);
        e.preventDefault();
      }, false);
    }
    
    var mouseDownLeft = false,
      mouseDownRight = false,
      whichImage = 0;
    $('#targetCanvas')
      .mousedown(function(e){
  		  if(e.which==1){
  			 return mouseDown(e);
  		  }
			})
			.mouseup(function(e){
  		  if(e.which==1){
          return mouseUp(e);
        }
			})
      .mousemove(function(e){
        return mouseMove(this.id,e.pageX,e.pageY);
      });
    
    normalizer.init({
      normals: {
        normalsImage: "/projects/normal-mapping/images/face/me.png",
        colorsImage:  "/projects/normal-mapping/images/face/front_smooth_small.png"
      },
      ctx: ctx,
      cb: function(){
        var image = normalizer.getImage("colorsImage");
        $('#targetCanvas').attr({width:image.width,height:image.height});
        
        $('#targetCanvas').css({width: "100%"});
      
        app.start(function(){
            draw();
          });   
        }
    });
  });
  </script>
</head>
<body>
  <!--<?php include("../../../wp-content/themes/evolve/home-nav.php"); ?>-->

  <div class="Centerer">
    <%- partial("../_nav") %>  
    <div style="clear:both;"></div>
    <div class="Picker">
      <div class="Selected" id="me"><a href="../me/"><img src="../images/me.png"></a></div>
      <div id="beth"><a href="../beth/"><img src="../images/beth.png"></a></div>
      <div id="cereal"><a href="../cereal/"><img src="../images/cereal.png"></a></div>
      <div id="sphere"><a href="../earth/"><img src="../images/new_earth.png"></a></div>
      <div id="head"><a href="../head/"><img src="../images/head_icon.png"></a></div>
			<div id="large_mesh"><a href="../large_mesh/"><img src="../images/large_mesh_icon.png"></a></div>
      <div id="obj_test"><a href="../obj_test/"><img src="../images/obj_test_icon.png"></a></div>
    </div>
    <div style="clear:both;"></div>

    <div  class="Explanation_Container">
      <div class="Explanation" style="margin: 5px 0 0 84px; 0 0; width: 350px; padding:  3px 30px 3px 30px ;">
        <p class="Small"><strong>Move the mouse left and right</strong>.</p>
      </div>
    </div>

  </div>
  <div class="Centerer">
    <div style="clear:both; margin-bottom: 0px; padding-bottom: 5px;"></div>
    <div class="Content">
      <div class="canvas-wrapper">
        <canvas id="targetCanvas" width="622" height="315"></canvas>
      </div>
    </div>
  </div>

  	<!--
  <div class="Centerer">
   <div id="disqus_thread">
    <script type="text/javascript">
      /**
        * var disqus_identifier; [Optional but recommended: Define a unique identifier (e.g. post id or slug) for this thread] 
        */
      (function() {
       var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
       dsq.src = 'http://endergen.disqus.com/embed.js';
       (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
      })();
    </script>
    <noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript=endergen">comments powered by Disqus.</a></noscript>
    <a href="http://disqus.com" class="dsq-brlink">blog comments powered by <span class="logo-disqus">Disqus</span></a>
    </div>
  </div>

  <script type="text/javascript">
    var disqus_shortname = 'endergen';
    (function () {
      var s = document.createElement('script'); s.async = true;
      s.src = 'http://disqus.com/forums/endergen/count.js';
      (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
    }());
  </script>
-->

  <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-16357083-1']);
    _gaq.push(['_trackPageview']);
  
    (function() {
      var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
      ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
      var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
    })();
  </script>

</body>

</html>
